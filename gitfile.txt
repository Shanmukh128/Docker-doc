Git & Githud both are different  

what is git?
      -- git free and open source distribute version control system

There are Four types
	-vcs & git repos
	-staging area & commite
	-Braches
	-issues & prs
-vcs stands for version control system	
      -vcs means if you storing application data in git
      - If you deployed a new version and that version have more debugs then you should go for old version and
        that version is stored in git
      -then sampley we can revorte back from the git

   what is repository (repo)
   repository is noting but project folder we can store the data

-1. what is remote repository
   remote repository means it is stored some server we using form here    

-2. what is local repository
   loacl repository means you store data in local system

-3. what is staging area 
    staging area means we can call file from the working directory either single file or multiable files 

-4 what is working directory
    working directory means it like a present working directory we create a files and folders here what we need

EXAMPLE-----
          we created three file in working directory and we called either one or two files to staging area and 
          then staging area to local repository in staging area two files are there two files are copyed to local 
          repository number file are there in staging area that file are copyed to local repository single files
          are not copyed to local repository how many file are there in staging area that all file are copyed to 
          local repository (commit) and finial remote repository all the file avialable in local repository that 
          all file are copyed to remote repository one and two files are not copyed all the files available in 
          loacl repository copyed to remote repository (push)

There four type of branchs-
         -main/master branch
         -futher branch
         -release branch
         -hot fix branch
         --avery code or any thing can be stored in main/master branch then it can be pushed to release branch
         --future branch is you need to add any thing or you need to write a new version that any thing can written
           in the futher branch and it can tested avery thing is fine it pushed to main/master branch. main/master
           is pushed to the release branch then it reches to customer
         -hot fix --if customer facing an issue with thing use need change immedetaly.hot fix means ypu have solve 
          very fast (2-3 days) that is the hot fix

GIT COMMANDS---
       --git init  = it is to initilazed the git
       --git config user.name "<here username (Shanmukh128)>" =to login peticular git to handle
       --git config user.email "<here email address(339@)>"= To login use both the command and login to the git 
       --git status = to know the status of git
       --git = git is installed are not
       --git add <file name> = working to staging area calling file either single or multiable
       --git commit -m = calling all file to local repository
       --git push -u origin main/master = calling all file to remote repository 
       --git pull = to pull to old to new version to shift use this command and before push use this command
       --git branch = to know the branch
       --git clone <repo url> = it is used to download the remote repository in to the local repository 
       --git remote add origin https://github.com/Shanmukh128/git-doc.git - to save file in git
       --git checkout -b "brach name" = to cteate a branch
       --git checkout "branch name" = to go the branch
       --git checkout -d "branch name" = To delete the branch
       --git log = to know new and old file or version 
       --git reset --hard <commit id> = to go to the old version commit id is avaliable in git log command
       --git revert <commit id> = to go to the old version and delete the new version
       --git diff = To know to modification
       --git remote -v = to know the remote thr avaliable remote repository
       --git remote = to know the what is our remote using
       --git commit -a -m "massage" = Ata time both add and commit by using this command
       --git tag <tag name> = To created a new tag
       --git tag =it will show all the tags
       --git tag -a <tag name> -m <"massage"> = creating a light weight tag by using this command
       --git tag -d <tag name> = To delete the tag
       --git push origin <tag name> = to push tag into the remote repositire
       --git iff --cached
       --git diff <file name> = to know the particular file modification are changes
       --git diff --untracked = To check which file are untracked
       --git rm --cached <file name> = To delete the file for the local repository
       --git add . = To add all the file into the staging area by using the (.)
       --git cherry-pick<commite id > = To combine the two braches by using this command it is like merge
       --git merge <branch name> = to merge more branch into the main branch
       --git stash = It is saved someware and it will give some id 
       --git stash save <"name"> = If you want give name to the stash by using this command
       --git stash list = To check all stash details by using this command
       --git stash pop = To go recently stash to working area  it cannot be there in stash list it deleted in stash list
       --git stash apply <stash name (0)> = While useing stash apply it will show the deatails in git status and
                                            git stash list also
       --git stash show -p = It will show modified changes what are it will show it will recent stash file
       --git stash show <stash@{0 or 1}> -p =it will show changes what we made in particular file
       --git stash drop <stash@{0 or 1 or 2 }> = It will delete the stash for completely .If not given stash id then
                                                 it will delete recent stash one that is use of this commad
       --git stash clear = It delete the all the staged file and avery thing is cleared
       --git stash branch <branch name> <stash id> = If you want to store stash details in different branch use this one 
       --stash -- It means like a security or hidden if you working in main branch we need switch to different 
                  branch without commiting we will use the stash command
       --fork -- It means a copy
       --clone -- it means to download the repository 
       --branch -- main branch is stord main code and we work on different branch and merge to the main branch 
